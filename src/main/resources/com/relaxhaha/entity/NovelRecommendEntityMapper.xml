<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.relaxhaha.mapper.NovelRecommendEntityMapper" >
  <resultMap id="BaseResultMap" type="com.relaxhaha.entity.NovelRecommendEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="novel_id" property="novelId" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="rec_count" property="recCount" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, novel_id, reason, rec_count, is_deleted, add_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from novel_recommend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from novel_recommend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.relaxhaha.entity.NovelRecommendEntity" >
    insert into novel_recommend (id, novel_id, reason, 
      rec_count, is_deleted, add_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{novelId,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{recCount,jdbcType=INTEGER}, #{isDeleted,jdbcType=TINYINT}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.relaxhaha.entity.NovelRecommendEntity" >
    insert into novel_recommend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="novelId != null" >
        novel_id,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="recCount != null" >
        rec_count,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="novelId != null" >
        #{novelId,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="recCount != null" >
        #{recCount,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.relaxhaha.entity.NovelRecommendEntity" >
    update novel_recommend
    <set >
      <if test="novelId != null" >
        novel_id = #{novelId,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="recCount != null" >
        rec_count = #{recCount,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.relaxhaha.entity.NovelRecommendEntity" >
    update novel_recommend
    set novel_id = #{novelId,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      rec_count = #{recCount,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>