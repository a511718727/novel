<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.relaxhaha.mapper.NovelCommentEntityMapper" >
  <resultMap id="BaseResultMap" type="com.relaxhaha.entity.NovelCommentEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="chapter_id" property="chapterId" jdbcType="INTEGER" />
    <result column="novel_id" property="novelId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="reader_id" property="readerId" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.relaxhaha.entity.NovelCommentEntity" extends="BaseResultMap" >
    <result column="comment" property="comment" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, chapter_id, novel_id, parent_id, reader_id, is_deleted, add_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    comment
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from novel_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from novel_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.relaxhaha.entity.NovelCommentEntity" >
    insert into novel_comment (id, chapter_id, novel_id, 
      parent_id, reader_id, is_deleted, 
      add_time, update_time, comment
      )
    values (#{id,jdbcType=INTEGER}, #{chapterId,jdbcType=INTEGER}, #{novelId,jdbcType=INTEGER}, 
      #{parentId,jdbcType=INTEGER}, #{readerId,jdbcType=INTEGER}, #{isDeleted,jdbcType=TINYINT}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.relaxhaha.entity.NovelCommentEntity" >
    insert into novel_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="chapterId != null" >
        chapter_id,
      </if>
      <if test="novelId != null" >
        novel_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="readerId != null" >
        reader_id,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="comment != null" >
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null" >
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="novelId != null" >
        #{novelId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="readerId != null" >
        #{readerId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.relaxhaha.entity.NovelCommentEntity" >
    update novel_comment
    <set >
      <if test="chapterId != null" >
        chapter_id = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="novelId != null" >
        novel_id = #{novelId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="readerId != null" >
        reader_id = #{readerId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.relaxhaha.entity.NovelCommentEntity" >
    update novel_comment
    set chapter_id = #{chapterId,jdbcType=INTEGER},
      novel_id = #{novelId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      reader_id = #{readerId,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.relaxhaha.entity.NovelCommentEntity" >
    update novel_comment
    set chapter_id = #{chapterId,jdbcType=INTEGER},
      novel_id = #{novelId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      reader_id = #{readerId,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>