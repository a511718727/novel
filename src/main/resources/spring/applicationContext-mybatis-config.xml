<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="3000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="filters" value="wall,stat"/>
    </bean>
    
    <!--数据源代理 -->
    <bean id="dataSourceProxy" class="com.p6spy.engine.spy.P6DataSource">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceProxy"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:com/relaxhaha/entity/*Mapper.xml</value>
            </list>
        </property>
    </bean>

     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.relaxhaha.mapper"/>
     <!--      <property name="sqlSessionFactory" ref="sqlSessionFactory"/>   -->
    </bean> 

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>   
    
    <!--事务控制-->
    <tx:annotation-driven proxy-target-class="true"/>
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* *..service.*Service.*(..))" order="100"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="bind*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="subtract*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="submit*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="process*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="add*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="remove*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="del*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="edit*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
            <tx:method name="check*" propagation="REQUIRED" isolation="READ_COMMITTED"
                       rollback-for="Throwable"/>
            <tx:method name="*" propagation="SUPPORTS" read-only="true" rollback-for="Throwable"/>
        </tx:attributes>
    </tx:advice>
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceProxy"/>
    </bean>
    
</beans>
